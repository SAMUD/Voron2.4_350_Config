#####################################################################
#   SET CHAMBER TEMPERATURE
#####################################################################
[gcode_macro SET_CHAMBER]
gcode:
  {% set chamber_target = params.CHAMBER_TEMP|default(0)|float %}
  SET_HEATER_TEMPERATURE heater=heater_chamber target={chamber_target}


#####################################################################
#   PARK THE NOZZLE
#####################################################################
[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G1 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30 F3000  


#####################################################################
#   HOME Y
#####################################################################
[gcode_macro HOME_Y]
gcode:
    {% set HOME_CUR = 0.700 %}
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_y'] %}
    {% set RUN_CUR = driver_config.run_current %}
    {% set th = printer.toolhead %}
    {% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
    
    G0 F{travel_speed//2} 
    # move X axis to the middle
    G0 X{th.axis_maximum.x//2}
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
    # Pause to ensure driver stall flag is clear
    G4 P2000
    # Home
    G28 Y0
    # Move away
    G90
    #G1 Y{th.axis_maximum.y//2} F10000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR}


#####################################################################
#   HOME X
#####################################################################
[gcode_macro HOME_X]
gcode:
    #{% set HOME_CUR = 0.700 %}
    #{% set driver_config = printer.configfile.settings['tmc2209 stepper_y'] %}
    #{% set RUN_CUR = driver_config.run_current %}
    {% set th = printer.toolhead %}
    # Set current for sensorless homing
    #SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
    # Pause to ensure driver stall flag is clear
    #G4 P2000
    # Home
    G28 X0
    # Move away
    # G90
    # G1 X{th.axis_maximum.x//2} F10000
    # Set current during print
    #SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR}

#####################################################################
#  G32 - Homing sequence
#####################################################################
[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28 Z
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32

#####################################################################
#   PRINT_START - called from slicer
#####################################################################
[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set FILAMENT_TYPE = params.FILAMENT_TYPE|string %}
  {% set target_chamber = params.CHAMBER|default("50")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  ## Directly start heating the bed and extruder to save time later
  M140 S{target_bed}


  ## Also directly start heating chamber.
  {% if FILAMENT_TYPE == "ABS" or FILAMENT_TYPE == "ASA" or FILAMENT_TYPE == "PC" %}
    #Those filament require a heated chamber
    {% if printer["heater_generic heater_chamber"].temperature >= 40|float%}
      #chamber is already hot, because we just did a print before. No heatsoak needed
      #Just set target temp and we are good to go
      SET_CHAMBER CHAMBER_TEMP={target_chamber}
      # no heatsoak is needed. This means we can heat up the nozzle right now. If we do it while we need a heatsoak we will cook the filament in the tip
      M104 S150
    {% else %}
      #Printer is still cold. Heatsoak needed
       SET_CHAMBER CHAMBER_TEMP={target_chamber+1} #+1 °C for faster temp target arrival
       M106 S204 #part cooling fan 80% for even more air circulation   
    {% endif %}
  {% else %}
    # no heatsoak is needed. This means we can heat up the nozzle right now. If we do it while we need a heatsoak we will cook the filament in the tip
    M104 S150
  {% endif %}

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  SET_DISPLAY_TEXT MSG="Homing printer"
  STATUS_HOMING         # Sets SB-leds to homing-mode
  G28                   # Full home (XYZ)
  G90                   # Absolut position

  ##  Uncomment for bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

  ##Now do the final heatsoak if needed
  STATUS_HEATING
  {% if FILAMENT_TYPE == "ABS" or FILAMENT_TYPE == "ASA" or FILAMENT_TYPE == "PC" %}
    #Those filament require a heated chamber
    #Target temperature has been set above. Just wait
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber-10}c"  # Displays info
    TEMPERATURE_WAIT SENSOR="heater_generic heater_chamber" MINIMUM={target_chamber-10} #wait until chamber temp is very nearly reached
    SET_CHAMBER CHAMBER_TEMP={target_chamber} #set correct chamber target and let PID do its magic
  {% endif %}
  M107 #part cooling fan off again

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  SET_DISPLAY_TEXT MSG="Waiting for hotend..."          # Displays info
  # Heats the nozzle to 150c
  M104 S150
  TEMPERATURE_WAIT SENSOR="extruder" MINIMUM=149 MAXIMUM=155 #Use this with M104 to avoid waiting for an exact temperature. If its +- few degrees its ok

  SET_DISPLAY_TEXT MSG="Waiting for bed..."    # Displays info
  M190 S{target_bed}                           # Check if bed is hot

  ##  Uncomment for Trident (Z_TILT_ADJUST)
  #SET_DISPLAY_TEXT MSG="Z-tilt adjust"     # Displays info
  #STATUS_LEVELING                          # Sets SB-leds to leveling-mode
  #Z_TILT_ADJUST                            # Levels the buildplate via z_tilt_adjust
  #G28 Z                                    # Homes Z again after z_tilt_adjust

  ##  Uncomment for V2 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="QGL"      # Displays info
  STATUS_LEVELING                 # Sets SB-leds to leveling-mode
  quad_gantry_level               # Levels the buildplate via QGL
  G28 Z                           # Homes Z again after QGL

  ##  Uncomment for Klicky auto-z
  #CALIBRATE_Z                                 # Calibrates Z-offset with klicky
  #SET_DISPLAY_TEXT MSG="Z-offset"             # Displays info

  ##  Uncomment for bed mesh (2 of 2)
  SET_DISPLAY_TEXT MSG="Running bed mesh"    # Displays info
  STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
  BED_MESH_CALIBRATE                  # Starts bed mesh

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Heating Hotend to printing temp: {target_extruder}c"             # Displays info
  M104 S{target_extruder}                                       # Heats the nozzle to printing temp, start it here, to save time while moving to smartPark
  M107                                                          # Turns off partcooling fan
  STATUS_HEATING                                                # Sets SB-leds to heating-mode
  Smart_Park #G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp

  # Gets ready to print by doing a purge line and updating the SB-leds
  STATUS_CLEANING
  SET_DISPLAY_TEXT MSG="Purging nozzle"             # Displays info
  #G0 X{x_wait - 50} Y4 F10000                      # Moves to starting point
  #G0 Z0.4                                          # Raises Z to 0.4
  #G91                                              # Incremental positioning 
  #G1 X100 E20 F1000                                # Purge line
  #G90                                              # Absolut position
  LINE_PURGE
  SET_DISPLAY_TEXT MSG="Printer goes brrrrr"       # Displays info
  STATUS_PRINTING                                  # Sets SB-leds to printing-mode


#####################################################################
#   PRINT_END - called from slicer
#####################################################################
[gcode_macro PRINT_END]
gcode:
  # safe anti-stringing move coords
  {% set th = printer.toolhead %}
  {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
  {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
  {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
  {% set target_bed = params.BED|int %}
  
  SAVE_GCODE_STATE NAME=STATE_PRINT_END
   
  M400                                                # wait for buffer to clear
  G92 E0                                              # zero the extruder
  G1 E-5.0 F1800                                      # retract filament
  G90                                                 # absolute positioning
  G0 X{x_safe} Y{y_safe} Z{z_safe}             # move nozzle to remove stringing
  G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2}  # park nozzle at rear

  {% if target_bed|int > 70 %}                      # Bed is hotter than 70 degrees
    SET_DISPLAY_TEXT MSG="Waiting for cooldown"         # Displays info
    STATUS_COOLING                                      # Sets SB-leds to cooldown
    TURN_OFF_HEATERS
    M106 S204                                           # Part cooling fan at 80%
    SET_CHAMBER CHAMBER_TEMP={ 80 }                     # Simulating that we want to heat the chamber, so the nevermore fans are running full power and clean the air
    TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM={ 70 }   #Wait until bed is cooled down to 70°C
  {% endif %}

  STATUS_PART_READY                                   # LEDs to part ready
  TURN_OFF_HEATERS
  M107                                                # Turn off the fans

  BED_MESH_CLEAR
  RESTORE_GCODE_STATE NAME=STATE_PRINT_END
  SET_DISPLAY_TEXT MSG="Finished..."

#####################################################################
# Unload Filament
#####################################################################

[gcode_macro UNLOAD_FILAMENT]
gcode:
  M83                            ; set extruder to relative
  G1 E10 F300                    ; extrude a little to soften tip
  G1 E-50 F1800                  ; retract some, but not too much or it will jam
  G1 E-25 F1800                  ; retract some, but not too much or it will jam
  M82


#####################################################################
# Load Filament
#####################################################################

[gcode_macro LOAD_FILAMENT]
gcode:
  M83                            ; set extruder to relative
  G1 E40 F1800                    ; load
  G1 E10 F300                    ; load
  G1 E35 F150                    ; prime nozzle with filament
  M82                            ; set extruder to absolute


######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[gcode_macro M600]
gcode:
    # {% set X = params.X|default(50)|float %}
    # {% set Y = params.Y|default(0)|float %}
    # {% set Z = params.Z|default(10)|float %}
    # SAVE_GCODE_STATE NAME=M600_state
    # PAUSE
    # G91
    # G1 E-.8 F2700
    # G1 Z{Z}
    # G90
    # G1 X{X} Y{Y} F3000
    # G91
    # G1 E-50 F1000
    # RESTORE_GCODE_STATE NAME=M600_state

    # this is for mobileraker notifications
    # https://github.com/Clon1998/mobileraker_companion/blob/main/docs/Custom_Notifications.md
    M117 $MR$: M600 change filament!  
    PAUSE